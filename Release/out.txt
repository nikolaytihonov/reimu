html 0012B2C0
































Lua: Functions and Types: lua_gc














<!--
if (window != top) top.location.href = location.href;
// -->











	






















	




	


	
	

	
	

	



	lua_gc	




	




Controls the garbage collector.



This function performs several tasks,
according to the value of the parameter :


	

[-0, +0, ]

e



int  ( *L, int what, int data);

lua_gc


lua_State









what


































stops the garbage collector.

:
LUA_GCSTOP






restarts the garbage collector.

:
LUA_GCRESTART






performs a full garbage-collection cycle.

:
LUA_GCCOLLECT






returns the current amount of memory (in Kbytes) in use by Lua.

:
LUA_GCCOUNT






returns the remainder of dividing the current amount of bytes of
memory in use by Lua by 1024.

:
LUA_GCCOUNTB






performs an incremental step of garbage collection.
The step "size" is controlled by 
(larger values mean more steps) in a non-specified way.
If you want to control the step size
you must experimentally tune the value of .
The function returns 1 if the step finished a
garbage-collection cycle.

:
LUA_GCSTEP



data


data





sets  as the new value
for the  of the collector (see ).
The function returns the previous value of the pause.

:
LUA_GCSETPAUSE



data


pause


&sect;2.10





sets  as the new value for the  of
the collector (see ).
The function returns the previous value of the step multiplier.

:
LUA_GCSETSTEPMUL



data


step multiplier


&sect;2.10


















lua_Alloc&bull;


lua_atpanic&bull;


lua_call&bull;


lua_CFunction&bull;


lua_checkstack&bull;


lua_close&bull;


lua_concat&bull;


lua_cpcall&bull;


lua_createtable&bull;


lua_dump&bull;


lua_equal&bull;


lua_error&bull;


lua_gc&bull;


lua_getallocf&bull;


lua_getfenv&bull;


lua_getfield&bull;


lua_getglobal&bull;


lua_getmetatable&bull;


lua_gettable&bull;


lua_gettop&bull;


lua_insert&bull;


lua_Integer&bull;


lua_isboolean&bull;


lua_iscfunction&bull;


lua_isfunction&bull;


lua_islightuserdata&bull;


lua_isnil&bull;


lua_isnone&bull;


lua_isnoneornil&bull;


lua_isnumber&bull;


lua_isstring&bull;


lua_istable&bull;


lua_isthread&bull;


lua_isuserdata&bull;


lua_lessthan&bull;


lua_load&bull;


lua_newstate&bull;


lua_newtable&bull;


lua_newthread&bull;


lua_newuserdata&bull;


lua_next&bull;


lua_Number&bull;


lua_objlen&bull;


lua_pcall&bull;


lua_pop&bull;


lua_pushboolean&bull;


lua_pushcclosure&bull;


lua_pushcfunction&bull;


lua_pushfstring&bull;


lua_pushinteger&bull;


lua_pushlightuserdata&bull;


lua_pushliteral&bull;


lua_pushlstring&bull;


lua_pushnil&bull;


lua_pushnumber&bull;


lua_pushstring&bull;


lua_pushthread&bull;


lua_pushvalue&bull;


lua_pushvfstring&bull;


lua_rawequal&bull;


lua_rawget&bull;


lua_rawgeti&bull;


lua_rawset&bull;


lua_rawseti&bull;


lua_Reader&bull;


lua_register&bull;


lua_remove&bull;


lua_replace&bull;


lua_resume&bull;


lua_setallocf&bull;


lua_setfenv&bull;


lua_setfield&bull;


lua_setglobal&bull;


lua_setmetatable&bull;


lua_settable&bull;


lua_settop&bull;


lua_State&bull;


lua_status&bull;


lua_toboolean&bull;


lua_tocfunction&bull;


lua_tointeger&bull;


lua_tolstring&bull;


lua_tonumber&bull;


lua_topointer&bull;


lua_tostring&bull;


lua_tothread&bull;


lua_touserdata&bull;


lua_type&bull;


lua_typename&bull;


lua_Writer&bull;


lua_xmove&bull;


lua_yield&bull;







EVERYTHING




Functions and Types



















































































































































































































































































































































































































































































































































































	

	&bull;

	

	





	[ 
	|  
	| 
	]
	


?


&uArr;


@








Collected: 21 (KB)
